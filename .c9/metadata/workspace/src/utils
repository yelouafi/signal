{"changed":true,"filter":false,"title":"utils","tooltip":"/src/utils","value":"\nss.timer = function timer ( prec, stop ) {\n\tvar sig = signal( Date.now() ),\n\t\tiv = start(),\n\t\tcount = 0;\n\t\t\n\tif( ss.isSig(stop) )\n\t\tstop.on( stopTimer );\n\t\t\n\treturn sig;\n\n\tfunction start() { \n\t    return setInterval( emit, prec );\n\t}\n\t\n\tfunction emit() { \n\t\tsig.$$emit( count );\n\t\tif ( stop && isFinite(stop) && (++count) >= stop ) \n\t\t\tclearInterval( iv );\n\t\t\n\t}\n\tfunction stopTimer() {\n\t\tif(iv) clearInterval( iv );\n\t\tstop.off( stopTimer );\n\t}\n};\n\nss.clock = function clock( stop ) {\n\treturn ss.timer( 1000, stop ).map( function( ms ) { return new Date(ms); } )\n};\n\nss.seconds = function seconds( stop ) {\n\treturn ss.timer( 1000, stop ).counter();\n};\n\nss.fromArray = function signalFromArray(array, interval) {\n\treturn interval ? withInterval() : withoutInterval();\n\n\tfunction withInterval() {\n\t\treturn ss.timer(interval, array.length).map(_.objGetter(array));\n\t}\n\t\n\tfunction withoutInterval() {\n\t\tvar sig = signal();\n\t\tsetTimeout(function() {\n\t\t\t_.each(array, sig.$$emit.bind(sig));\n\t\t}, 0);\n\t\treturn sig;\n\t}\n}","undoManager":{"mark":-1,"position":1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":49,"column":1},"action":"insert","lines":["ss.timer = function timer ( prec, stop ) {","\tvar sig = signal( Date.now() ),","\t\tiv = start(),","\t\tcount = 0;","\t\t","\tif( ss.isSig(stop) )","\t\tstop.on( stopTimer );","\t\t","\treturn sig;","","\tfunction start() { ","\t    return setInterval( emit, prec );","\t}","\t","\tfunction emit() { ","\t\tsig.$$emit( count );","\t\tif ( stop && isFinite(stop) && (++count) >= stop ) ","\t\t\tclearInterval( iv );","\t\t","\t}","\tfunction stopTimer() {","\t\tif(iv) clearInterval( iv );","\t\tstop.off( stopTimer );","\t}","};","","ss.clock = function clock( stop ) {","\treturn ss.timer( 1000, stop ).map( function( ms ) { return new Date(ms); } )","};","","ss.seconds = function seconds( stop ) {","\treturn ss.timer( 1000, stop ).counter();","};","","ss.fromArray = function signalFromArray(array, interval) {","\treturn interval ? withInterval() : withoutInterval();","","\tfunction withInterval() {","\t\treturn ss.timer(interval, array.length).map(_.objGetter(array));","\t}","\t","\tfunction withoutInterval() {","\t\tvar sig = signal();","\t\tsetTimeout(function() {","\t\t\t_.each(array, sig.$$emit.bind(sig));","\t\t}, 0);","\t\treturn sig;","\t}","}"]}]}]]},"ace":{"folds":[],"scrolltop":156,"scrollleft":0,"selection":{"start":{"row":49,"column":1},"end":{"row":49,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":10,"state":"start","mode":"ace/mode/text"}},"timestamp":1425041702542}