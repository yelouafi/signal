{"filter":false,"title":"comb.js","tooltip":"/src/comb.js","undoManager":{"mark":37,"position":37,"stack":[[{"group":"doc","deltas":[{"start":{"row":17,"column":2},"end":{"row":18,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":19,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["function signal() {","\tvar startValue = arguments.length ? arguments[0] : neant,","\t\tdiscrete = ( startValue === neant ),","\t\tcurrentValue = startValue,","\t\tvalueEvent = new Event(),","\t\tlog = null;","\t","\tsigval.$$logPrefix = currentValue;","\tsigval.$$sig = true;","\tsigval.$$sources = [];","\t","\tsigval.log = function(prefix) { ","\t\tlog = _.fn( prefix, _.logger(prefix) ); ","\t\tsigval.$$logPrefix = prefix;","\t\treturn sigval; ","\t}","\t","\t","\t_.each(['on', 'off'], function( method ) { ","\t\tsigval[method] = valueEvent[method].bind(valueEvent) ","\t});","\t","\tsigval.$$emit = function( val ) {","\t\tif(log) log(val);","\t\tcurrentValue = val;","\t\tvalueEvent.emit(val);","\t\tif( discrete )","\t\t\tcurrentValue = neant;","\t};","\t","\tsigval.map = function( getter, args /*...*/ ) {","\t    args = _.slice(arguments,1);","\t\treturn ss.map( sigval, _.fapply.apply( null, [].concat( getter, args ) ) )","\t};","\t","\tsigval.val = function (val) {","\t\treturn ss.map( sigval, _.val(val) );","\t};","\t","\tsigval.fold = _.bindl( ss.fold, sigval );","\t","\tsigval.filter = _.bindl( ss.filter, sigval);","\t_.each( ['eq', 'gt', 'gte', 'lt', 'lte'], function( key ) {","\t\tvar fpred = _[key];","\t\tsigval[key] = function(val) { ","\t\t    return ss.map( sigval, fpred(val) );","\t\t};","\t\t","\t\tvar whenKey = 'when'+key.charAt(0).toUpperCase() + key.slice(1);","\t\tsigval[whenKey] = function(val) { ","\t\t    return ss.filter( sigval, fpred(val) ); ","\t\t};","\t});","\t","\tsigval.and = _.bindl( ss.and, sigval );","\t","\tsigval.merge = _.bindl( ss.merge, sigval );","\t","\tsigval.counter = _.bindl( ss.fold, sigval, 0, _.inc );","\t","\tsigval.occ = discrete ? sigval : ss.merge( sigval );","\t","\tsigval.tap = function(proc) {","\t\treturn ss.map(sigval, function(v) {","\t\t\tproc(v);","\t\t\treturn v;","\t\t})","\t}","\t","\tfunction sigval() { return currentValue; }","\t","\treturn sigval;","}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":3},"end":{"row":1,"column":36},"action":"remove","lines":[" signal = require(\"./signal.js\");"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":2},"end":{"row":1,"column":3},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":1},"end":{"row":1,"column":2},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":1,"column":1},"action":"remove","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":29},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":[":"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"remove","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":11},"end":{"row":50,"column":12},"action":"remove","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":10},"end":{"row":50,"column":11},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":9},"end":{"row":50,"column":10},"action":"remove","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":9},"end":{"row":50,"column":10},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":10},"end":{"row":50,"column":11},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":11},"end":{"row":50,"column":12},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":0},"end":{"row":91,"column":0},"action":"remove","lines":["function signal() {","\tvar startValue = arguments.length ? arguments[0] : neant,","\t\tdiscrete = ( startValue === neant ),","\t\tcurrentValue = startValue,","\t\tvalueEvent = new Event(),","\t\tlog = null;","\t","\tsigval.$$logPrefix = currentValue;","\tsigval.$$sig = true;","\tsigval.$$sources = [];","\t","\tsigval.log = function(prefix) { ","\t\tlog = _.fn( prefix, _.logger(prefix) ); ","\t\tsigval.$$logPrefix = prefix;","\t\treturn sigval; ","\t}","\t","\t","\t_.each(['on', 'off'], function( method ) { ","\t\tsigval[method] = valueEvent[method].bind(valueEvent) ","\t});","\t","\tsigval.$$emit = function( val ) {","\t\tif(log) log(val);","\t\tcurrentValue = val;","\t\tvalueEvent.emit(val);","\t\tif( discrete )","\t\t\tcurrentValue = neant;","\t};","\t","\tsigval.map = function( getter, args /*...*/ ) {","\t    args = _.slice(arguments,1);","\t\treturn ss.map( sigval, _.fapply.apply( null, [].concat( getter, args ) ) )","\t};","\t","\tsigval.val = function (val) {","\t\treturn ss.map( sigval, _.val(val) );","\t};","\t","\tsigval.fold = _.bindl( ss.fold, sigval );","\t","\tsigval.filter = _.bindl( ss.filter, sigval);","\t_.each( ['eq', 'gt', 'gte', 'lt', 'lte'], function( key ) {","\t\tvar fpred = _[key];","\t\tsigval[key] = function(val) { ","\t\t    return ss.map( sigval, fpred(val) );","\t\t};","\t\t","\t\tvar whenKey = 'when'+key.charAt(0).toUpperCase() + key.slice(1);","\t\tsigval[whenKey] = function(val) { ","\t\t    return ss.filter( sigval, fpred(val) ); ","\t\t};","\t});","\t","\tsigval.and = _.bindl( ss.and, sigval );","\t","\tsigval.merge = _.bindl( ss.merge, sigval );","\t","\tsigval.counter = _.bindl( ss.fold, sigval, 0, _.inc );","\t","\tsigval.occ = discrete ? sigval : ss.merge( sigval );","\t","\tsigval.tap = function(proc) {","\t\treturn ss.map(sigval, function(v) {","\t\t\tproc(v);","\t\t\treturn v;","\t\t})","\t}","\t","\tfunction sigval() { return currentValue; }","\t","\treturn sigval;","}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":2},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":241,"column":2},"end":{"row":242,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":242,"column":0},"end":{"row":243,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":243,"column":0},"end":{"row":316,"column":0},"action":"insert","lines":["function signal() {","\tvar startValue = arguments.length ? arguments[0] : neant,","\t\tdiscrete = ( startValue === neant ),","\t\tcurrentValue = startValue,","\t\tvalueEvent = new Event(),","\t\tlog = null;","\t","\tsigval.$$logPrefix = currentValue;","\tsigval.$$sig = true;","\tsigval.$$sources = [];","\t","\tsigval.log = function(prefix) { ","\t\tlog = _.fn( prefix, _.logger(prefix) ); ","\t\tsigval.$$logPrefix = prefix;","\t\treturn sigval; ","\t}","\t","\t","\t_.each(['on', 'off'], function( method ) { ","\t\tsigval[method] = valueEvent[method].bind(valueEvent) ","\t});","\t","\tsigval.$$emit = function( val ) {","\t\tif(log) log(val);","\t\tcurrentValue = val;","\t\tvalueEvent.emit(val);","\t\tif( discrete )","\t\t\tcurrentValue = neant;","\t};","\t","\tsigval.map = function( getter, args /*...*/ ) {","\t    args = _.slice(arguments,1);","\t\treturn ss.map( sigval, _.fapply.apply( null, [].concat( getter, args ) ) )","\t};","\t","\tsigval.val = function (val) {","\t\treturn ss.map( sigval, _.val(val) );","\t};","\t","\tsigval.fold = _.bindl( ss.fold, sigval );","\t","\tsigval.filter = _.bindl( ss.filter, sigval);","\t_.each( ['eq', 'gt', 'gte', 'lt', 'lte'], function( key ) {","\t\tvar fpred = _[key];","\t\tsigval[key] = function(val) { ","\t\t    return ss.map( sigval, fpred(val) );","\t\t};","\t\t","\t\tvar whenKey = 'when'+key.charAt(0).toUpperCase() + key.slice(1);","\t\tsigval[whenKey] = function(val) { ","\t\t    return ss.filter( sigval, fpred(val) ); ","\t\t};","\t});","\t","\tsigval.and = _.bindl( ss.and, sigval );","\t","\tsigval.merge = _.bindl( ss.merge, sigval );","\t","\tsigval.counter = _.bindl( ss.fold, sigval, 0, _.inc );","\t","\tsigval.occ = discrete ? sigval : ss.merge( sigval );","\t","\tsigval.tap = function(proc) {","\t\treturn ss.map(sigval, function(v) {","\t\t\tproc(v);","\t\t\treturn v;","\t\t})","\t}","\t","\tfunction sigval() { return currentValue; }","\t","\treturn sigval;","}",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":316,"column":0},"end":{"row":316,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1424638537279,"hash":"432b3f5f844a1452fa298731db74dbfc622adb5e"}